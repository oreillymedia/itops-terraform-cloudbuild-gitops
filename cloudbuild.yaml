# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


steps:
# - id: 'dev'
#   name: 'gcr.io/cloud-builders/docker'
#   entrypoint: 'bash'
#   args: 
#   - '-c'
#   - | 
#       echo "***********************"
#       echo "$BRANCH_NAME"
#       echo "***********************"

- id: 'ping internal'
- name: 'gcr.io/cloud-builders/docker'
  args: ['echo', 'Hello, world!']
  env:
  - 'CLOUD_DNS_SERVERS=169.254.169.254'
  entrypoint: 'bash'
  args: ['-c', 'echo nameserver $CLOUD_DNS_SERVERS > /etc/resolv.conf']
  # entrypoint: 'bash'
  # args: ['-c', 'docker compose run --rm infractl plan --module environments/dev --env itops-playground' ]
  # args:
  # - '-c'
  # - |
  #   apt update
  #   apt install iputils-ping -y
  #   cd scripts
  #   ping -c 5 itops-playground-vault-01.c.itops-playground.internal
  
    
    
options:
  pool:
    name: 'projects/itops-playground/locations/us-central1/workerPools/itops-playground-cb'

# [START tf-plan]
# - id: 'tf plan'
#   name: 'hashicorp/terraform:1.0.0'
#   entrypoint: 'sh'
#   args: 
#   - '-c'
#   - | 
#       if [ -d "environments/$BRANCH_NAME/" ]; then
#         cd environments/$BRANCH_NAME
#         terraform plan
#       else
#         for dir in environments/*/
#         do 
#           cd ${dir}   
#           env=${dir%*/}
#           env=${env#*/}  
#           echo ""
#           echo "*************** TERRAFOM PLAN ******************"
#           echo "******* At environment: ${env} ********"
#           echo "*************************************************"
#           terraform plan || exit 1
#           cd ../../
#         done
#       fi 
# [END tf-plan]

# # [START tf-apply]
# - id: 'tf apply'
#   name: 'hashicorp/terraform:1.0.0'
#   entrypoint: 'sh'
#   args: 
#   - '-c'
#   - | 
#       if [ -d "environments/$BRANCH_NAME/" ]; then
#         cd environments/$BRANCH_NAME      
#         terraform apply -auto-approve
#       else
#         echo "***************************** SKIPPING APPLYING *******************************"
#         echo "Branch '$BRANCH_NAME' does not represent an official environment."
#         echo "*******************************************************************************"
#       fi
# [END tf-apply]      
